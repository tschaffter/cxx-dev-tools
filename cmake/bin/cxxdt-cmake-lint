#!/bin/bash
#
# CMake linter provided by cxx-dev-tools
#
# ARG_POSITIONAL_INF([cmake-files],[CMake files to lint (default: read CMake files from PWD/.cxxdt-cmake-lint)],[])
# ARG_HELP([CMake linter provided by cxx-dev-tools])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.8.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
_arg_cmake_files=()
# THE DEFAULTS INITIALIZATION - OPTIONALS


print_help()
{
	printf '%s\n' "CMake linter provided by cxx-dev-tools"
	printf 'Usage: %s [-h|--help] [<cmake-files-1>] ... [<cmake-files-n>] ...\n' "$0"
	printf '\t%s\n' "<cmake-files>: CMake files to lint (default: read CMake files from PWD/.cxxdt-cmake-lint)"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


assign_positional_args()
{
	local _positional_name _shift_for=$1
	_positional_names=""
	_our_args=$((${#_positionals[@]} - 0))
	for ((ii = 0; ii < _our_args; ii++))
	do
		_positional_names="$_positional_names _arg_cmake_files[$((ii + 0))]"
	done

	shift "$_shift_for"
	for _positional_name in ${_positional_names}
	do
		test $# -gt 0 || break
		eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
		shift
	done
}

parse_commandline "$@"
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

cxxdt_cmake_lint_config_file=$PWD/.cxxdt-cmake-lint
cxxdt_cmake_lint_files=("${_arg_cmake_files[@]}")

read_cmake_files_from_file()
{
	while IFS= read -r line || [[ "$line" ]]; do
  		cxxdt_cmake_lint_files+=("$line")
	done < $cxxdt_cmake_lint_config_file
}

if [ "${#cxxdt_cmake_lint_files[@]}" -eq 0 ]; then
	if [ ! -f "$cxxdt_cmake_lint_config_file" ]; then
		echo "ERROR: Specify CMake files in the command line or in $cxxdt_cmake_lint_config_file"
		exit 1
	fi

	read_cmake_files_from_file
fi

# Join CMake files
printf -v cxxdt_cmake_lint_files '%s ' "${cxxdt_cmake_lint_files[@]}"

cmake-lint \
    $cxxdt_cmake_lint_files \
    --config-files \
        $CXX_DEV_TOOLS_PATH/cmake/config/.cmake-format.json \
        $CXX_DEV_TOOLS_PATH/cmake/config/.esp-idf-cmake-format.json

# ] <-- needed because of Argbash